(()=>{var{defineProperty:s,getOwnPropertyNames:h,getOwnPropertyDescriptor:u}=Object,m=Object.prototype.hasOwnProperty;var v=new WeakMap,p=(e)=>{var r=v.get(e),o;if(r)return r;if(r=s({},"__esModule",{value:!0}),e&&typeof e==="object"||typeof e==="function")h(e).map((n)=>!m.call(r,n)&&s(r,n,{get:()=>e[n],enumerable:!(o=u(e,n))||o.enumerable}));return v.set(e,r),r};var y=(e,r)=>{for(var o in r)s(e,o,{get:r[o],enumerable:!0,configurable:!0,set:(n)=>r[o]=()=>n})};var P={};y(P,{ZilPayProviderImpl:()=>a});function l(){let e=globalThis.document.querySelector("link[rel*=\'icon\']");if(!e)throw new Error("website favicon is required");return e.href}class a{isZilPay=!0;supportedMethods=new Set(["eth_requestAccounts","eth_accounts","eth_sign","eth_sendTransaction","eth_getBalance","eth_getTransactionByHash","eth_getTransactionReceipt","eth_call","eth_estimateGas","eth_blockNumber","eth_getBlockByNumber","eth_getBlockByHash","eth_subscribe","eth_unsubscribe","net_version","eth_chainId","eth_getCode","eth_getStorageAt"]);#e=new Map;constructor(){this.#r(),this.#n()}#r(){this.#e.set("connect",new Set),this.#e.set("disconnect",new Set),this.#e.set("chainChanged",new Set),this.#e.set("accountsChanged",new Set),this.#e.set("message",new Set)}#n(){if(typeof window!=="undefined"&&window)window.handleZilPayEvent=(e)=>{let r=this.#e.get(e.event);if(r)switch(e.event){case"connect":r.forEach((n)=>n(e.data));break;case"disconnect":r.forEach((n)=>n(e.data));break;case"chainChanged":let o=e.data;if(typeof o!=="string"||!o.startsWith("0x")){console.warn("Invalid chainId format for chainChanged event");return}r.forEach((n)=>n(o));break;case"accountsChanged":r.forEach((n)=>n(e.data));break;case"message":r.forEach((n)=>n(e.data));break}}}async request(e){if(!this.supportedMethods.has(e.method))return Promise.reject({message:"Unsupported method",code:4200,data:{method:e.method}});let r=l();return new Promise((o,n)=>{let d=Math.random().toString(36).substring(2),g={type:"ZILPAY_REQUEST",uuid:d,payload:e,icon:r};if(typeof window==="undefined"||!window||!window.FlutterWebView){n({message:"ZilPay channel is not available",code:4900,data:null});return}try{window.FlutterWebView.postMessage(JSON.stringify(g))}catch(i){n({message:`Failed to send request: ${i.message}`,code:4000,data:i});return}let c=(i)=>{let t=i.data;if(t.type==="ZILPAY_RESPONSE"&&t.uuid===d){if(t.payload.error)n({message:t.payload.error.message,code:t.payload.error.code||4000,data:t.payload.error.data});else o(t.payload.result);window.removeEventListener("message",c)}};window.addEventListener("message",c)})}async enable(){return this.request({method:"eth_requestAccounts"})}on(e,r){let o=this.#e.get(e);if(o)o.add(r)}removeListener(e,r){let o=this.#e.get(e);if(o)o.delete(r)}}(function(){if(typeof window==="undefined"||!window){console.warn("No window object available for ZilPay injection");return}try{if("ethereum"in window&&window.ethereum){console.warn("Ethereum provider already exists in window");return}let e=new a;try{Object.defineProperty(window,"ethereum",{value:e,writable:!1,configurable:!0})}catch(r){window.ethereum=e,console.warn("Using fallback assignment for ethereum due to:",r)}window.dispatchEvent(new Event("ethereum#initialized")),console.log("Ethereum provider injected successfully")}catch(e){console.error("Failed to inject Ethereum provider:",e)}})();})();
