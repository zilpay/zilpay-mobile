plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def keystorePropertiesFile = rootProject.file("key.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    namespace = "com.zilpaymobile"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['src/main/jniLibs']
        }
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }

    defaultConfig {
        applicationId = "com.zilpaymobile"
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName

        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        }
    }

    splits {
        abi {
            enable true
            reset()
            universalApk false
        }
    }

    signingConfigs {
        release {
            if (project.hasProperty('ZILPAY_UPLOAD_STORE_FILE')) {
                storeFile file(ZILPAY_UPLOAD_STORE_FILE)
                storePassword ZILPAY_UPLOAD_STORE_PASSWORD
                keyAlias ZILPAY_UPLOAD_KEY_ALIAS
                keyPassword ZILPAY_UPLOAD_KEY_PASSWORD
            } else {
                println "Warning: Keystore properties not found, release build may fail."
            }
        }
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            // signingConfig = signingConfigs.debug
            signingConfig signingConfigs.release
        }
    }
}

flutter {
    source = "../.."
}
