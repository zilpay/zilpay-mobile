// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.8.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

class BrowserSettingsInfo {
  final int searchEngineIndex;
  final bool javascriptEnabled;
  final bool cacheEnabled;
  final bool cookiesEnabled;
  final bool formDataSaveEnabled;
  final int contentBlocking;
  final bool doNotTrack;
  final bool incognitoMode;
  final bool clearCacheOnExit;
  final String userAgentOverride;
  final bool prefetchEnabled;
  final bool preloadLinks;
  final bool hardwareAcceleration;
  final double textScalingFactor;
  final bool allowGeolocation;
  final bool allowCamera;
  final bool allowMicrophone;
  final bool allowAutoPlay;

  const BrowserSettingsInfo({
    required this.searchEngineIndex,
    required this.javascriptEnabled,
    required this.cacheEnabled,
    required this.cookiesEnabled,
    required this.formDataSaveEnabled,
    required this.contentBlocking,
    required this.doNotTrack,
    required this.incognitoMode,
    required this.clearCacheOnExit,
    required this.userAgentOverride,
    required this.prefetchEnabled,
    required this.preloadLinks,
    required this.hardwareAcceleration,
    required this.textScalingFactor,
    required this.allowGeolocation,
    required this.allowCamera,
    required this.allowMicrophone,
    required this.allowAutoPlay,
  });

  @override
  int get hashCode =>
      searchEngineIndex.hashCode ^
      javascriptEnabled.hashCode ^
      cacheEnabled.hashCode ^
      cookiesEnabled.hashCode ^
      formDataSaveEnabled.hashCode ^
      contentBlocking.hashCode ^
      doNotTrack.hashCode ^
      incognitoMode.hashCode ^
      clearCacheOnExit.hashCode ^
      userAgentOverride.hashCode ^
      prefetchEnabled.hashCode ^
      preloadLinks.hashCode ^
      hardwareAcceleration.hashCode ^
      textScalingFactor.hashCode ^
      allowGeolocation.hashCode ^
      allowCamera.hashCode ^
      allowMicrophone.hashCode ^
      allowAutoPlay.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is BrowserSettingsInfo &&
          runtimeType == other.runtimeType &&
          searchEngineIndex == other.searchEngineIndex &&
          javascriptEnabled == other.javascriptEnabled &&
          cacheEnabled == other.cacheEnabled &&
          cookiesEnabled == other.cookiesEnabled &&
          formDataSaveEnabled == other.formDataSaveEnabled &&
          contentBlocking == other.contentBlocking &&
          doNotTrack == other.doNotTrack &&
          incognitoMode == other.incognitoMode &&
          clearCacheOnExit == other.clearCacheOnExit &&
          userAgentOverride == other.userAgentOverride &&
          prefetchEnabled == other.prefetchEnabled &&
          preloadLinks == other.preloadLinks &&
          hardwareAcceleration == other.hardwareAcceleration &&
          textScalingFactor == other.textScalingFactor &&
          allowGeolocation == other.allowGeolocation &&
          allowCamera == other.allowCamera &&
          allowMicrophone == other.allowMicrophone &&
          allowAutoPlay == other.allowAutoPlay;
}

class WalletArgonParamsInfo {
  final int memory;
  final int iterations;
  final int threads;
  final String secret;

  const WalletArgonParamsInfo({
    required this.memory,
    required this.iterations,
    required this.threads,
    required this.secret,
  });

  @override
  int get hashCode =>
      memory.hashCode ^
      iterations.hashCode ^
      threads.hashCode ^
      secret.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is WalletArgonParamsInfo &&
          runtimeType == other.runtimeType &&
          memory == other.memory &&
          iterations == other.iterations &&
          threads == other.threads &&
          secret == other.secret;
}

class WalletSettingsInfo {
  final Uint8List cipherOrders;
  final WalletArgonParamsInfo argonParams;
  final String? currencyConvert;
  final String? ipfsNode;
  final bool ensEnabled;
  final bool gasControlEnabled;
  final bool nodeRankingEnabled;
  final int maxConnections;
  final int requestTimeoutSecs;

  const WalletSettingsInfo({
    required this.cipherOrders,
    required this.argonParams,
    this.currencyConvert,
    this.ipfsNode,
    required this.ensEnabled,
    required this.gasControlEnabled,
    required this.nodeRankingEnabled,
    required this.maxConnections,
    required this.requestTimeoutSecs,
  });

  @override
  int get hashCode =>
      cipherOrders.hashCode ^
      argonParams.hashCode ^
      currencyConvert.hashCode ^
      ipfsNode.hashCode ^
      ensEnabled.hashCode ^
      gasControlEnabled.hashCode ^
      nodeRankingEnabled.hashCode ^
      maxConnections.hashCode ^
      requestTimeoutSecs.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is WalletSettingsInfo &&
          runtimeType == other.runtimeType &&
          cipherOrders == other.cipherOrders &&
          argonParams == other.argonParams &&
          currencyConvert == other.currencyConvert &&
          ipfsNode == other.ipfsNode &&
          ensEnabled == other.ensEnabled &&
          gasControlEnabled == other.gasControlEnabled &&
          nodeRankingEnabled == other.nodeRankingEnabled &&
          maxConnections == other.maxConnections &&
          requestTimeoutSecs == other.requestTimeoutSecs;
}
